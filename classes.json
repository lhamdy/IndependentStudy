{
  "courses": [
    {
      "language": "Not Specified",
      "restrictions": "[]",
      "preqs": "[[Math101, Math102], [Math104], [Math127], [Math128], [Math131], [Math132]]",
      "cid": "CICS 108",
      "title": "Foundations of Data Science",
      "instructor": "Purity Mugambi",
      "Description": "The field of Data Science encompasses methods, processes, and systems that enable the extraction of useful knowledge from data. Foundations of Data Science introduces core data science concepts including computational and inferential thinking, along with core data science skills including computer programming and statistical methods. The course presents these topics in the context of hands-on analysis of real-world data sets, including economic data, document collections, geographical data, and social networks. The course also explores social issues surrounding data analysis such as privacy and design",
      "Credits": 4
    },
    {
      "language": "None",
      "restrictions": "[]",
      "preqs": "[]",
      "cid": "CICS 290A",
      "title": "Introduction to Research in the Discipline",
      "instructor": "Neena Thota",
      "Description": "The Introduction to Research in the Discipline course is part of the CICS Early Research Scholars Program (ERSP). It provides a group-based, dual-mentored research structure designed to provide a supportive and inclusive first research experience for a large number of early-career Computer Science and Informatics majors.",
      "Credits": 1
    },
    {
      "language": "None",
      "restrictions": "[]",
      "preqs": "[]",
      "cid": "CIC 291T",
      "title": "Seminar - CICS Transfer Success",
      "instructor": "Jason Valladares",
      "Description": "This seminar is intended to help you become fully prepared to succeed in CICS at UMass. Students in this seminar will be led by an instructor with a detailed understanding of the transfer student experience, and supported by various staff members in CICS. You will learn about which campus and College resources will be most helpful to you, how to best utilize these resources, and where you can look for other opportunities to connect",
      "Credits": 1
    },
    {
      "language": "None",
      "restrictions": "[]",
      "preqs": "[]",
      "cid": "CICS 297DP",
      "title": "Special Topics - The Digital Public Sphere",
      "instructor": "Ethan Zuckerman",
      "Description": "This course explores the significance of the public sphere - from pamphlets, newspapers and letters to radio, television, the internet and social media - and its relationship to participatory, democratic society. Moving back and forth between the history of the public sphere and contemporary debates about the tensions between media and democracy, students will learn why democracies prescribe protected roles of the media, how media manipulation plays a role in politics, and how media spaces serve as deliberative spaces. Students will write short reaction papers to the readings, which will be used to shape class discussions, and a longer final paper, focused on applying the theories of the public sphere to regulation of contemporary online spaces. This course does not count toward CS or INFORM Major requirements.",
      "Credits": 3
    },
    {
      "language": "None",
      "restrictions": "[]",
      "preqs": "[[COMPSCI186], [COMPSCI187]]",
      "cid": "CICS298A",
      "title": "Practicum - Leadership",
      "instructor": ",",
      "Description": "No matter where you end up in tech, you will need to explain concepts, products and ideas to people with different technical backgrounds. This course is intended to help prepare you for these communication tasks. Through the lens of tutoring, we will work on explaining technical ideas clearly and compassionately to others. We will do some theoretical study, including a history of CS education as well asbrain and learning science, and some practice, including tutoring beginning students in CS. This course is intended for a broad range of students looking to pursue careers in tech, but will be particularly useful for those who are currently UCAs or intending to apply for UCA positions in the future.",
      "Credits": 1
    },
    {
      "language": "None",
      "restrictions": "[]",
      "preqs": "[[ENGLWRIT112, COMPSCI220, COMPSCI230, COMPSCI240], [ENGLWRIT112, COMPSCI220, COMPSCI230, COMPSCI250], [ENGLWRIT112, INFO248]]",
      "cid": "CICS 305",
      "title": "Social Issues in Computing",
      "instructor": "Siobhan Meï, Siobhan Meï, Siobhan Meï, Justin Obara, STAFF, STAFF, STAFF, STAFF, Michelle Trim",
      "Description": "Through a careful analysis and discussion of a range of computing issues, topics, and polices, we will explore various impacts of computers on modern society. This class satisfies the Junior Year Writing requirement by providing directed practice and specific instruction in a range of writing genres. Students will produce approximately 20-25 pages of polished written work over the course of the semester.",
      "Credits": 3
    },
    {
      "language": "Python",
      "restrictions": "[]",
      "preqs": "[[COMPSCI119, STATISTCS240], [COMPSCI119, OIM40], [COMPSCI119, PSYCH240], [COMPSCI119, STATISTCS515], [COMPSCI119, RES-ECON 212], [COMPSCI119, SOCIOL212], [COMPSCI121, STATISTCS240], [COMPSCI121, OIM40], [COMPSCI121, PSYCH240],\n [COMPSCI121, STATISTCS515], [COMPSCI121, RES-ECON 212], [COMPSCI121, \nSOCIOL212], [COMPSCI186, STATISTCS240], [COMPSCI186, OIM40], [COMPSCI186, PSYCH240], [COMPSCI186, STATISTCS515], [COMPSCI186, RES-ECON 212], [COMPSCI186, SOCIOL212], [COMPSCI187, STATISTCS240], [COMPSCI187, OIM40], [COMPSCI187, PSYCH240],\n [COMPSCI187, STATISTCS515], [COMPSCI187, RES-ECON 212], [COMPSCI187, SOCIOL212]]",
      "cid": "CICS 397A",
      "title": "Special Topics - Predictive Analytics with Python",
      "instructor": "Matthew Rattigan",
      "Description": "Modern technological advances are generating ever-greater volumes of data, and there are an astounding number of opportunities to use these data sets for good (and bad) in the applied sciences, business, social media, politics, cyber security, etc. The goal of this course is to familiarize participants with some of the most commonly used data analytics techniques, including methods for reducing data to informative statistics, predictive modeling, and cluster analysis. Students in this course will learn and use the Python programming language, creating scripts from the ground up to collect, manipulate, and analyze real and fascinating data sets. We will learn to ask and answer questions from data, and will cover all phases of the analytics process, from basic data wrangling and transformation to communicating through visualization. This course requires mathematical background in probability and statistics, and experience programming in some modern programming language. Does not count as a CS Elective (BA or BS).",
      "Credits": 3
    },
    {
      "language": "Python",
      "restrictions": "[]",
      "preqs": "[]",
      "cid": "CICS 580",
      "title": "Introduction to Numerical Computing with Python",
      "instructor": "STAFF",
      "Description": "This course is an introduction to computer programming for numerical computing. The course is based on the computer programming language Python and is suitable for students with no programming or numerical computing background who are interested in taking courses in machine learning, natural language processing, or data science. The course will cover fundamental programming, numerical computing, and numerical linear algebra topics, along with the Python libraries that implement the corresponding data structures and algorithms. The course will include hands-on programming assignments and a project. No prior programming experience is required. Familiarity with undergraduate-level probability, statistics and linear algebra is assumed. Does not count toward graduate degrees.",
      "Credits": 1
    },
    {
      "language": "Python",
      "restrictions": "[]",
      "preqs": "[]",
      "cid": "COMPSCI 119",
      "title": "Introduction to Programming",
      "instructor": "Cole Reilly",
      "Description": "A complete introduction to computer programming using the Python language. Topics include coverage of all the supported data types and program code structures, functions (up through lambda expressions and recursion), reasoning about and debugging existing code, implementation of custom libraries, selection of data structures, and the fundamentals of object-oriented programming. Students will create, debug, and run Python 3 programs that explore each of these topics in turn, from simple loops up through the processing of large data sets, and eventually to the creation of professional-quality libraries to synthesize graphics images and audio files. No prior programming experience expected",
      "Credits": 3
    },
    {
      "language": "Java",
      "restrictions": "[]",
      "preqs": "[[Math101, Math102], [Math104], [Math127], [Math128], [Math131], [Math132]]",
      "cid": "COMPSCI 121",
      "title": "Introduction to Problem Solving with Computers",
      "instructor": "Cheryl Swanier",
      "Description": "COMPSCI 121 provides an introduction to problem solving and computer programming using the programming language Java. The course teaches how real-world problems can be solved computationally using the Java programming language. Concepts and techniques covered include data types, expressions, objects, methods, top-down program design, program testing and debugging, interactive programs, conditionals, iteration, and arrays. No previous programming experience is required; however, this course is intended for Computer Science majors or those who plan on applying to the major. Non-majors are strongly encouraged to take one of our programming courses designed for non-majors. Use of a laptop computer on which you can install software is required",
      "Credits": 4
    },
    {
      "language": "Java",
      "restrictions": "[]",
      "preqs": "[[COMPSCI 121], [MATH 101, MATH 102], [MATH 104], [MATH 127], [MATH 128], [MATH 131], [MATH 132]]",
      "cid": "COMPSCI 186",
      "title": "Using Data Structures",
      "instructor": "Peter Klemperer",
      "Description": "COMPSCI 186 introduces foundational abstract data types and algorithms. The main focus is on the use of data structures in designing and developing programs to solve problems in a variety of domains. Specific topics include lists, sets, maps, graphs, stacks, queues, searching, and sorting. There will be weekly programming assignments, programming and written exercises in discussion sections, regular quizzes, and a cumulative final exam. This course is not a substitute for COMPSCI 187. If unsure of whether this course or COMPSCI 187 is more appropriate, contact instructor",
      "Credits": 4
    },
    {
      "language": "Java",
      "restrictions": "[]",
      "preqs": "[[COMPSCI 121], [COMPSCI 186], [COMPSCI 190D]",
      "cid": "COMPSCI 187",
      "title": "Programming with Data Structures",
      "instructor": "Gordon Anderson, Cheryl Swanier",
      "Description": "The course introduces and develops methods for designing and implementing abstract data types using the Java programming language. The main focus is on how to build and encapsulate data objects and their associated operations. Specific topics include linked structures, recursive structures and algorithms, binary trees, balanced trees, and hash tables. These topics are fundamental to programming and are essential to other courses in computer science. The course involves weekly programming assignments, in-class quizzes, discussion section exercises, and multiple exams.  Basic Java language concepts are introduced quickly; if unsure of background, contact instructor",
      "Credits": 4
    },
    {
      "language": "C",
      "restrictions": "[]",
      "preqs": "[[COMPSCI 121]]",
      "cid": "COMPSCI 198C",
      "title": "Practicum - Introduction to the C Programming Language",
      "instructor": "J Moss, Timothy Richards",
      "Description": "This practicum assumes general background and experience in computer programming (such as that provided by COMPSCI 121 or a similar introductory programming course) and some knowledge of data structures. Content will include basic C data types, declarations, expressions, statements, and functions; simple use of macros; some common library calls (such as formatted input/output); basic pointer manipulation using linked lists; and introduction to using standard tools (gcc and make). It is recommended that students planning to take COMPSCI 230 take this class along with COMPSCI 187",
      "Credits": 1
    },
    {
      "language": "Javascript",
      "restrictions": "[]",
      "preqs": "[[COMPSCI 187]]",
      "cid": "COMPSCI 220",
      "title": "Programming Methodology",
      "instructor": "Jaime Davila, Marius Minea",
      "Description": "Development of individual skills necessary for designing, implementing, testing and modifying larger programs, including: design strategies and patterns, using functional and object-oriented approaches, testing and program verification, code refactoring, interfacing with libraries. There will be significant programming and mid-term and final examinations",
      "Credits": 4
    },
    {
      "language": "C, Assembly",
      "restrictions": "[]",
      "preqs": "[[COMPSCI 187]]",
      "cid": "COMPSCI 230",
      "title": "Computer Systems Principles",
      "instructor": "Marc Liberatore",
      "Description": "Large-scale software systems like Google - deployed over a world-wide network of hundreds of thousands of computers - have become a part of our lives. These are systems success stories - they are reliable, available (\"up\" nearly all the time), handle an unbelievable amount of load from users around the world, yet provide virtually instantaneous results. On the other hand, many computer systems don't perform nearly as well as Google - hence the now-clich? \"the system is down.\" In this class, we study the scientific principles behind the construction of high-performance, scalable systems. The course begins with a discussion of C data representation, and moves up the stack from there to the features of modern architectures, assembly languages, and operating system services such as I/O, process, and synchronization. This class assumes students have either taken COMPSCI 198C or have equivalent experience in the C programming language",
      "Credits": 4
    },
    {
      "language": "None",
      "restrictions": "[]",
      "preqs": "[[COMPSCI 187, MATH 132]]",
      "cid": "COMPSCI 240",
      "title": "Reasoning Under Uncertainty",
      "instructor": "Jie Xiong",
      "Description": "Development of mathematical reasoning skills for problems that involve uncertainty. Each concept will be illustrated by real-world examples and demonstrated through in-class and homework exercises. Counting and probability -- basic counting problems, probability definitions, mean, variance, binomial distribution, discrete random variables, continuous random variables, Markov and Chebyshev bounds, Laws of large number, and central limit theorem. Probabilistic reasoning -- conditional probability and odds, Bayes' Law, Markov Chains, Bayesian Network, Markov Decision Processes.",
      "Credits": 4
    },
    {
      "language": "None",
      "restrictions": "[]",
      "preqs": "[[COMPSCI 187, MATH 132],[ECE 241, MATH 132]]",
      "cid": "COMPSCI 250",
      "title": "Introduction to Computation",
      "instructor": "Ghazaleh Parvini",
      "Description": "Basic concepts of discrete mathematics useful to computer science: set theory, strings and formal languages, propositional and predicate calculus, relations and functions, basic number theory. Induction and recursion: interplay of inductive definition, inductive proof, and recursive algorithms. Graphs, trees, and search. Finite-state machines, regular languages, nondeterministic finite automata, Kleene's Theorem. Problem sets, 2 midterm exams, timed final",
      "Credits": 4
    },
    {
      "language": "None",
      "restrictions": "[]",
      "preqs": "[[COMPSCI 187, COMPSCI 250],[COMPSCI 187, MATH 455]]",
      "cid": "COMPSCI 311",
      "title": "Introduction to Algorithms",
      "instructor": "Daniel Sheldon, Ramesh Sitaraman",
      "Description": "This course will introduce you to a variety of techniques to design algorithms, such as divide and conquer, greedy, dynamic programming, and network flow. You will learn to study the performance of various algorithms within a formal, mathematical framework. You will also learn how to design very efficient algorithms for many kinds of problems and recognize problems that currently do not have efficient algorithms. Assignments may include programming: you should be able to program in Java, C, or some other closely related language. Mathematical experience (as provided by COMPSCI 250) is required. This course counts as an Elective toward the CS Major",
      "Credits": 4
    },
    {
      "language": "Java, C",
      "restrictions": "[]",
      "preqs": "[[COMPSCI 220]]",
      "cid": "COMPSCI 320",
      "title": "Introduction to Software Engineering",
      "instructor": "Gordon Anderson, Yuriy Brun",
      "Description": "In this course, students learn and gain practical experience with software engineering principles and techniques. The practical experience centers on a semester-long team project in which a software development project is carried through all the stages of the software life cycle. Topics in this course include requirements analysis, specification, design, abstraction, programming style, testing, maintenance, communication, teamwork, and software project management. Particular emphasis is placed on communication and negotiation skills and on designing and developing maintainable software. Use of computer required. Several written assignments, in-class presentations, and a term project. This course satisfies the IE Requirement for CS Major.",
      "Credits": 4
    },
    {
      "language": "None",
      "restrictions": "[]",
      "preqs": "[[COMPSCI 186], [COMPSCI 187]]",
      "cid": "COMPSCI 325",
      "title": "Introduction to Human Computer Interaction",
      "instructor": "Ravi Karkar, Narges Mahyar",
      "Description": "Human-Computer Interaction design is \"design for human use\". Computers are a ubiquitous part of many interactions in our lives, from the mundane everydayness of light switches and \"smart\" vending machines to entertainment and education to sophisticated instruments and complex energy and defense systems. In this course, we will challenge you to broaden your grasp of what a user interface can and should be, and try your hand at doing better yourself. It is a fast-paced, hands-on, project-based experience that will challenge many of your ideas of what computer science is and can be. It is designed around active lecture sessions supported by readings, working classes, and team projects, where students practice and explore the concepts introduced in lecture, and go well beyond them to learn and apply HCI techniques that build into group projects. More specifically, the course adopts a human-centered design (HCD) approach and teaches a highly iterative process called design thinking. The design thinking process draws heavily on the fundamentals of human-computer interaction (HCI) methods. I also cover design methodologies, evaluation methodologies (both quantitative and qualitative), human information processing, cognition, and perception. This course counts as an Elective toward the CS and INFORM Majors.",
      "Credits": 3
    },
    {
      "language": "HTTP, HTML5, CSS, JavaScript",
      "restrictions": "[]",
      "preqs": "[[COMPSCI220],[COMPSCI230],[INFO248, COMPSCI186],[INFO248, COMPSCI187]]",
      "cid": "COMPSCI 326",
      "title": "Web Programming",
      "instructor": "Emery Berger",
      "Description": "The web is arguably today's most important application platform. Web browsers run on practically every device, and even many phone applications are in fact web applications under the covers. This course will cover a broad range of client-side web technologies, including HTTP itself, HTML5, CSS, and JavaScript; it will additionally cover key concepts for the server side of web applications, including key value stores and SQL servers. This course will also cover key concepts and technologies including AJAX, JavaScript libraries (e.g., jQuery), and web security. This course is hands-on and heavily project-based; students will construct a substantial dynamic web application based on the concepts, technologies, and techniques presented during lectures and in readings. This course satisfies the IE Requirement for CS and INFORM Majors. Note: as the name web programming denotes, programming is a key component of this class. Previous background in JavaScript is strongly recommended",
      "Credits": 4
    },
    {
      "language": "C, Assembly language",
      "restrictions": "[]",
      "preqs": "[[COMPSCI220], [COMPSCI230]]",
      "cid": "COMPSCI 335",
      "title": "Inside the Box",
      "instructor": "Charles Weems",
      "Description": "How does the computer actually work? In this course we peel away the layers of abstraction and look at how switches become logic circuits, how logic circuits do math, and how programs really execute. We will wire up some simple examples of logic, then move on to programming an embedded ARM processor in a mix of assembly language and C, interfacing with various I/O devices and sensors, to experience what happens when machine code executes. We will also see the impact of hidden acceleration mechanisms like caches, pipelines, and branch predictors.",
      "Credits": 3
    },
    {
      "language": "SQL",
      "restrictions": "[]",
      "preqs": "[[COMPSCI187], [INFO248], [COMPSCI186]]",
      "cid": "COMPSCI 345",
      "title": "Practice and Applications of Data Management",
      "instructor": "Alexandra Meliou",
      "Description": "Computing has become data-driven, and databases are now at the heart of commercial applications. The purpose of this course is to provide a comprehensive introduction to the use of data management systems within the context of various applications. Some of the covered topics include application-driven database design, schema refinement, implementation of basic transactions, data on the web, and data visualization. The class will follow a flipped classroom model; students will be required to review materials in preparation for each week and they will work collaboratively on practical problems in class. This course counts as an Elective toward the CS and INFORM Major. Students who have completed COMPSCI 445 are not eligible to take this course without instructor permission",
      "Credits": 3
    },
    {
      "language": "Not Specified",
      "restrictions": "[]",
      "preqs": "[[COMPSCI230]]",
      "cid": "COMPSCI 360",
      "title": "Introduction to Computer and Network Security",
      "instructor": "Christopher Misra",
      "Description": "This course provides an introduction to the principles and practice of computer and network security. A focus on both fundamentals and practical information will be stressed. The three key topics of this course are cryptography, privacy, and network security. Subtopics include ciphers, hashes, key exchange, security services (integrity, availability, confidentiality, etc.), security attacks, vulnerabilities, anonymous communications, and countermeasures.",
      "Credits": 3
    },
    {
      "language": "Python",
      "restrictions": "[]",
      "preqs": "[[COMPSCI230]]",
      "cid": "COMPSCI 365",
      "title": "Digital Forensics",
      "instructor": "Brian Levine",
      "Description": "The goal of forensics is to gather artifacts for refinement into evidence that supports or refutes a hypothesis about an alleged crime or policy violation. Done correctly, forensics represents the application of science to law. The techniques can also be abused to thwart privacy. This course is a broad introduction to forensic investigation of digital information and devices. We cover the acquisition, analysis, and courtroom presentation of information from file systems, operating systems, networks, mobile applications, and the like. Students do not need experience with these systems. We review the use of some professional tools, however, the primary goal of the course is to understand why and from where artifacts are recoverable in these systems. Most assignments involve coding forensic tools. For a small portion of the class, we cover some relevant issues from the law, privacy, and current events. Thus, the class serves the well-rounded student who is eager to participate in class discussion on a variety of technical and social issues. This course counts as a CS Elective toward the CS and INFORM Majors",
      "Credits": 3
    },
    {
      "language": "Java, C",
      "restrictions": "[]",
      "preqs": "[[COMPSCI230]]",
      "cid": "COMPSCI 377",
      "title": "Operating Systems",
      "instructor": "Timothy Richards",
      "Description": "In this course we examine the important problems in operating system design and implementation. The operating system provides a well-known, convenient, and efficient interface between user programs and the bare hardware of the computer on which they run. The operating system is responsible for allowing resources (e.g., disks, networks, and processors) to be shared, providing common services needed by many different programs (e.g., file service, the ability to start or stop processes, and access to the printer), and protecting individual programs from one another. The course will start with a brief historical perspective of the evolution of operating systems over the last fifty years, and then cover the major components of most operating systems. This discussion will cover the tradeoffs that can be made between performance and functionality during the design and implementation of an operating system. Particular emphasis will be given to three major OS subsystems: process management (processes, threads, CPU scheduling, synchronization, and deadlock), memory management (segmentation, paging, swapping), file systems, and operating system support for distributed systems. This course counts as a CS Elective toward the CS Major",
      "Credits": 4
    },
    {
      "language": "Python",
      "restrictions": "[]",
      "preqs": "[[COMPSCI220, COMPSCI240],[COMPSCI220, STAT515],[COMPSCI230, COMPSCI240], [COMPSCI230, STAT515]]",
      "cid": "COMPSCI 383",
      "title": "Artificial Intelligence",
      "instructor": "Matthew Rattigan",
      "Description": "The course explores key concepts underlying intelligent systems, which are increasingly deployed in consumer products and onlineservices. Topics includeproblem solving, state-space representation, heuristicsearch techniques, game playing, knowledge representation, logical reasoning, automated planning, reasoning underuncertainty, decision theory and machine learning. We will examine the use of these concepts in the design of intelligent agents in the context of severalapplications. Students should be comfortable programming in Python. This course counts as a CS Elective toward the CS Major",
      "Credits": 3
    },
    {
      "language": "Not Specified",
      "restrictions": "[]",
      "preqs": "[[COMPSCI230, ENGWRIT112]]",
      "cid": "COMPSCI 391L",
      "title": "Seminar - Computer Crime Law and the Technologies of Investigation and Privacy",
      "instructor": "Marvin Cable",
      "Description": "A study, analysis, and discussion of the legal issues related to crimes involving computers and networks, including topical actions by dissidents and governments. We will also study the technologies of forensic investigation, intelligence gathering, privacy enhancement, and censorship resistance. Our main legal topics will include recent and important case law, statutes, and constitutional clauses concerning authorization, access, search and seizure, wiretaps, the right to privacy, and FISA. Our technology topics will include methods of investigation and resistance in the context of the Internet and Cellular networks. Students are assumed to have no background in legal concepts. Students will be required to complete substantial legal readings, complete significant written analysis of rulings, learn about technologies in detail, and participate in lively class discussion.",
      "Credits": 3
    },
    {
      "language": "Python",
      "restrictions": "[]",
      "preqs": "[[MATH235, COMPSCI220], [MATH235, COMPSCI230]]",
      "cid": "COMPSCI 403",
      "title": "Introduction to Robotics",
      "instructor": "Donghyun Kim",
      "Description": "This course covers concepts and methods to understand how robots move and interact with the physical world. We will study how to define robots, describe their state, and control their motion. We will study the representation of three-dimensional movement, mechanisms (kinematics and dynamics), actuators, dynamics-based feedback control, and trajectory optimization. Students will also learn Matlab software to build simulation and analysis tools",
      "Credits": 3
    },
    {
      "language": "Not Specified",
      "restrictions": "[]",
      "preqs": "[[COMPSCI320], [COMPSCI326]]",
      "cid": "COMPSCI 420",
      "title": "Software Entrepreneurship",
      "instructor": "Neena Thota",
      "Description": "This course is geared towards students interested in developing software that moves from early stage proof-of-concept ideas towards marketable products with societal benefit. The course leverages the expertise of the Entrepreneurs in Residence (EIR) of the Ventures @ CICS initiative at CICS. The course is grounded in Challenge Based Learning (CBL), an active, student-directed instructional framework that was developed by Apple Inc. and educators. This course counts as an Elective toward the CS major.",
      "Credits": 3
    },
    {
      "language": "managing the work of teams of COMPSCI 320 students",
      "restrictions": "[]",
      "preqs": "[[COMPSCI 320]]",
      "cid": "COMPSCI 429",
      "title": "Software Engineering Project Management",
      "instructor": "Gordon Anderson, Yuriy Brun",
      "Description": "The purpose of this course is to provide students with practical experience in the management of software development projects. Students in this course will gain this experience by serving as software development team technical managers for teams of software engineering students in COMPSCI 320. As project managers, the students in COMPSCI 429 will be responsible for: supervising and managing the work of teams of COMPSCI 320 students; interfacing with the other COMPSCI 429 students managing other teams in the course; interfacing with the course instructor, course TA, and course customer. COMPSCI 429 students will be assigned readings in software engineering project management to provide a theoretical basis for their work in this course. But the majority of work in the course will be related to the actual management of assigned development teams. As team managers, COMPSCI 429 students will set goals and schedules for their teams, track and report team progress, negotiate with leaders of other teams and the course customer, and evaluate the work of members of their teams. COMPSCI 429 course assignments may include: written team goals, plans and schedules; periodic reports on team progress; documentation of agreements reached with other team leaders and customers; evaluations of the applicability of theoretical papers to the work of this course. This course will meet at the same times and places as COMPSCI 320. Additional meetings with team members and other students in COMPSCI 429 are also expected to be arranged by mutual agreement. An additional one hour weekly meeting of all of the students in COMPSCI 429 is required.",
      "Credits": 3
    },
    {
      "language": "SQL, MapReduce, Spark",
      "restrictions": "[]",
      "preqs": "[[COMPSCI 220], [COMPSCI 230]], [[COMPSCI 311], [COMPSCI 345]]",
      "cid": "COMPSCI 445",
      "title": "Information Systems",
      "instructor": "Marco Serafini",
      "Description": "This course is an introduction to the efficient management of large-scale data. The course includes principles for representing information as structured data, query languages for analyzing and manipulating structured data, and core systems principles that enable efficient computation on large data sets. Classical relational database topics will be covered (data modeling, SQL, query optimization, concurrency control), as well as semi-structured data (XML, JSON), and distributed data processing paradigms (e.g. MapReduce and Spark). Additional application topics may include web application development, data integration, processing data streams, database security and privacy. This course counts as an Elective toward the CS Major",
      "Credits": 3
    },
    {
      "restrictions": "[]",
      "preqs": "[[COMPSCI 240], [COMPSCI 383], [STAT 515, COMPSCI 383]]",
      "cid": "COMPSCI 446",
      "title": "Search Engines",
      "instructor": "James Allan",
      "Description": "This course provides an overview of the important issues in information retrieval, and how those issues affect the design and implementation of search engines. The course emphasizes the technology used in Web search engines, and the information retrieval theories and concepts that underlie all search applications. Mathematical experience (as provided by COMPSCI 240) is required. You should also be able to program in Java (or some other closely related language). This course counts as an Elective toward the CS Major",
      "Credits": 3
    },
    {
      "restrictions": "[]",
      "preqs": "[[COMPSCI 230], [COMPSCI 377]]",
      "cid": "COMPSCI 453",
      "title": "Computer Networks",
      "instructor": "Parviz Kermani",
      "Description": "Introduction to computer communication networks and protocols. Fundamental concepts in the design and analysis of computer networks. Topics include: layered network architectures, networked applications, network programming interfaces, transport, congestion, routing, data link protocols, local area and data center networks, network security, and wireless networks. Examples drawn from the Internet (e.g., TCP, UDP, and IP) protocol suite. Homework assignments involve programming and written tasks. In Fall 2020, this course will be taught as a primarily online class, without in-class lectures, but with extensive on-line material including recorded video material, interactive exercises, and online discussion. There will be an optional weekly, one-hour in-class and on-line open discussion period. This course counts as an Elective toward the CS Major",
      "Credits": 3
    },
    {
      "restrictions": "[]",
      "preqs": "[[COMPSCI 326], [COMPSCI 345], [COMPSCI 377], [COMPSCI453], [COMPSCI 497P]]",
      "cid": "COMPSCI 461",
      "title": "Secure Distributed Systems",
      "instructor": "Gregory Stone",
      "Description": "This is a class devoted to the study of securing distributed systems, with blockchain-based cryptocurrencies serving as our real platform of interest. We'll start with the fundamentals of Lamport's, Fischer's, and Douceur's results that fence-in all consensus system, and discuss Byzantine fault tolerance. We'll also look at the efficiency of the network architectures for peer-to-peer/distributed system communication and attacks on their security, such as denial of service attacks. And we'll review relevant applied cryptography such as elliptic curves. We ll discuss in detail the mechanisms of Bitcoin and Ethereum and we ll program distributed applications for Ethereum. Other topics include economics and finance. Assignments will include programming projects and reading research papers. The grade is also based on exams and participation in discussion. The course is based on a flipped classroom and uses a hybrid instruction model. Some of the course content is delivered online, however students are required to attend weekly class meetings. This course counts as a CS Elective toward the CS major (BA/BS), as well an Any 2 menu choice for the Security & Privacy track.",
      "Credits": 3
    },
    {
      "language": "Natural Language Processing",
      "restrictions": "[]",
      "preqs": "[[COMPSCI 220, COMPSCI 240], [Ling 492B]]",
      "cid": "COMPSCI 490A",
      "title": "Applications of Natural Language Processing",
      "instructor": "Laure Thompson",
      "Description": "This course will introduce NLP methods and applications, such as text classification, sentiment analysis, machine translation, and other applications to identify and use the meaning of text. During the course, students will (1) learn fundamental methods and algorithms for NLP; (2) become familiar with key facts about human language that motivate them, and help practitioners know what problems are possible to solve; and (3) complete a series of hands-on projects to use, implement, experiment with, and improve NLP tools. This course counts as a CS Elective for the CS Major (BA or BS).",
      "Credits": 3
    },
    {
      "restrictions": "[]",
      "preqs": "[COMPSCI 326]",
      "cid": "COMPSCI 497S",
      "title": "Special Topics - Scalable Web Systems",
      "instructor": "Timothy Richards",
      "Description": "The web has become a large and complex area for application development. Access to an abundance of open source languages, libraries, and frameworks has led to the quick and easy construction of a variety of applications with several moving parts working in coordination to present to the user the illusion of a single program. In reality, web applications are extremely difficult to get right. They involve a large collection of coordinated services, multiple databases, complicated user interfaces, security and performance issues, and ever changing 3rd party services, spread across physical and virtual machines. These complications are further stressed by the large number of concurrent users that access these applications every second. This course will investigate several well known web-based applications and the technology and software architecture used to scale these applications. We will also study a specific topic related to scalability in software design in the context of web application architecture. This course counts as a CS Elective toward the CS major (BA/BS) and as an Elective toward the INFORM major",
      "Credits": 3
    },
    {
      "restrictions": "[]",
      "preqs": "[[COMPSCI 240, COMPSCI 311], [STAT 515, COMPSCI 311]]",
      "cid": "COMPSCI 514",
      "title": "Algorithms for Data Science",
      "instructor": "Andrew McGregor, Cameron Musco",
      "Description": "With the advent of social networks, ubiquitous sensors, and large-scale computational science, data scientists must deal with data that is massive in size, arrives at blinding speeds, and often must be processed within interactive or quasi-interactive time frames. This course studies the mathematical foundations of big data processing, developing algorithms and learning how to analyze them. We explore methods for sampling, sketching, and distributed processing of large scale databases, graphs, and data streams for purposes of scalable statistical description, querying, pattern mining, and learning. This course counts as an Elective toward the CS Major.",
      "Credits": 3
    },
    {
      "language": "Unified Modeling Language, Java ",
      "restrictions": "[]",
      "preqs": "[COMPSCI 320]",
      "cid": "COMPSCI 520",
      "title": "Theory and Practice of Software Engineering",
      "instructor": "Heather Conboy",
      "Description": "Introduces students to the principal activities and state-of-the-art techniques involved in developing high-quality software systems. Topics include: requirements engineering, formal specification methods, design principles & patterns, verification & validation, debugging, and automated software engineering. This course counts as an Elective toward the CS Major",
      "Credits": 3
    },
    {
      "restrictions": "[]",
      "preqs": "[[COMPSCI 311, COMPSCI 345, COMPSCI 377]]",
      "cid": "COMPSCI 532",
      "title": "Systems for Data Science",
      "instructor": "Hui Guan",
      "Description": "In this course, students will learn the fundamentals behind large-scale systems in the context of data science. We will cover the issues involved in scaling up (to many processors) and out (to many nodes) parallelism in order to perform fast analyses on large datasets. These include locality and data representation, concurrency, distributed databases and systems, performance analysis and understanding. We will explore the details of existing and emerging data science platforms, including MapReduce-Hadoop, Spark, and more. This course counts as an Elective toward the CS Major.",
      "Credits": 3
    },
    {
      "language": "Not specified",
      "restrictions": "[]",
      "preqs": "[]",
      "cid": "COMPSCI 560",
      "title": "Introduction to Computer and Network Security",
      "instructor": "Parviz Kermani",
      "Description": "This course provides an introduction to the principles and practice of computer and network security with a focus on both fundamental principles and practical applications through hands-on approach. Many of the principles are taught through examples. The key topics of this course are a brief introduction to computer networking; applied cryptography; protecting users, data, and services; network security, and common threats and defense strategies. Students will complete a number of practical lab assignments as well as auto-graded quizzes/assignments",
      "Credits": 3
    },
    {
      "language": "Not specified",
      "restrictions": "[]",
      "preqs": "[]",
      "cid": "COMPSCI 563",
      "title": "Internet Law and Policy",
      "instructor": "Marvin Cable",
      "Description": "This course is meant for those looking for legal knowledge for use in computing- and Internet-related endeavors. The course will include topics related to security, policy, and the use of machine learning and related technologies. In additional, students will be assigned law review articles and will learn to do legal research so that they can remain updated after the course ends. Topics covered are all in the context of the ubiquity of the Internet and computing, and they include: basic legal principles, contract law, substantive laws, intellectual property law, ethics, dealing with third parties, policy issues, and topical issues such as implications of applying machine learning technology. This course was formerly numbered as INFOSEC 690L",
      "Credits": 3
    },
    {
      "language": "Not specified",
      "restrictions": "[]",
      "preqs": " [[COMPSCI 250],[COMPSCI 455]]",
      "cid": "COMPSCI 575",
      "title": "Combinatorics and Graph Theory",
      "instructor": "Marius Minea",
      "Description": "This course is a basic introduction to combinatorics and graph theory for advanced undergraduates in computer science, mathematics, engineering and science. Topics covered include: elements of graph theory; Euler and Hamiltonian circuits; graph coloring; matching; basic counting methods; generating functions; recurrences; inclusion-exclusion; and Polya's theory of counting. This course counts as an Elective toward the CS Major.",
      "Credits": 3
    },
    {
      "language": "Not specified",
      "restrictions": "[]",
      "preqs": "[[COMPSCI 220, COMPSCI 311, MATH 235]]",
      "cid": "COMPSCI 576",
      "title": "Game Programming",
      "instructor": "Evangelos Kalogerakis",
      "Description": "Game Programming introduces students to concepts of computer game development, including 2D and 3D modeling, character design, animation, game art, basic game AI, audio and video effects. The course will help students build the programming skills needed to turn ideas into games. Both runtime systems and the asset pipelines will be covered. Students will work on various game programming exercises with modern game engines and graphics APIs. This course counts as a CS Elective for the CS Major (BA or BS).",
      "Credits": 3
    },
    {
      "language": "Python, Matlab, Scala, R, Julia",
      "restrictions": "[]",
      "preqs": "[[MATH 545, COMPSCI 240, STATS 515], [COMPSCI 240, STATS 515, MATH 235, MATH 233], [COMPSCI 240, MATH 235, MATH 233]]",
      "cid": "COMPSCI 589",
      "title": "Machine Learning",
      "instructor": "Justin Domke",
      "Description": "This course will introduce core machine learning models and algorithms for classification, regression, clustering, and dimensionality reduction. On the theory side, the course will focus on effectively using machine learning methods to solve real-world problems with an emphasis on model selection, regularization, and empirical evaluation. The assignments will involve both mathematical problems and implementation tasks. Knowledge of a high-level programming language is absolutely necessary. Python is most commonly used (along with standard libraries such as numpy, scipy, and scikit-learn), but languages such as Matlab, R, Scala, Julia would also be suitable. While this course has an applied focus, it still requires appropriate mathematical background in probability and statistics, calculus, and linear algebra. The prerequisites for undergrads were previously COMPSCI 383 and MATH 235 (COMPSCI 240 provides sufficient background in probability, and MATH 131/132 provide sufficient background in calculus). Graduate students can check the descriptions for these courses to verify that they have sufficient mathematical background for 589. Strong foundations in linear algebra, calculus, probability, and statistics are essential for successfully completing this course. Graduate students from outside computer science with sufficient background are also welcome to take the course. This course counts as an Elective toward the CS Major.",
      "Credits": 3
    },
    {
      "language": "Python - I'm assuming",
      "restrictions": "[]",
      "preqs": "[]",
      "cid": "COMPSCI 590OP",
      "title": "Applied Numerical Optimization",
      "instructor": "Shiting Lan",
      "Description": "This course provides an overview of the important topic of numerical optimization. In this introductory-level course, we will cover the basic concepts of optimization, the key algorithms, and their applications in image/signal processing, machine learning, and statistical estimation. Topics covered include, but are not limited to: i) the basics concepts in optimization, e.g., linear algebra overview, convex sets, norms, optimality conditions, duality, ii) common optimization algorithms, e.g., gradient descent methods, Newton and quasi-Newton methods, conjugate gradient, proximal methods, linear programming, interior point methods, stochastic methods, distributed methods, and iii) applications, e.g., fitting generalized linear models, neural networks, sparsity, recommender systems, image processing, network utility maximization. Required background: basic knowledge of Python programming, basic knowledge of probability and statistics, linear algebra, multivariate calculus",
      "Credits": 3
    },
    {
      "language": "Not specified",
      "restrictions": "[]",
      "preqs": "[[COMPSCI 240, COMPSCI 250]]",
      "cid": "COMPSCI 590T",
      "title": "Algorithmic Fairness and Strategic Behavior",
      "instructor": "Yair Zick",
      "Description": "Recent years have seen a dramatic rise in the use of algorithms for solving problems involving strategic decision makers. Deployed algorithms now assist in a variety of economic interactions: assigning medical residents to schools, allocating students to courses, allocating security resources in airports, allocating computational resources and dividing rent. We will explore foundational topics at the intersection of economics and computation, starting with the foundations of game theory: Nash equilibria, the theory of cooperative games, before proceeding to covering more advanced topics: matching algorithms, allocation of indivisible goods, and mechanism design. This course counts as a CS Elective for the CS Major (BA or BS)",
      "Credits": 3
    },
    {
      "language": "Not specified",
      "restrictions": "[]",
      "preqs": "[]",
      "cid": "COMPSCI 596E",
      "title": "Independent Study - Machine Learning Applied to Child Rescue",
      "instructor": "Benjamin Glickenhaus",
      "Description": "Our goal is to build practical machine learning models to be used by professionals dedicated to rescuing children from abuse. This course is a group-based, guided independent study. Students will be encouraged to design and build their own diagnostic and machine learning tools, while also learning from professionals in the fields of digital forensics and law enforcement. The entire student group will meet once a week to share progress via short presentations. ",
      "Credits": 3
    },
    {
      "language": "not specified",
      "restrictions": "[]",
      "preqs": "[]",
      "cid": "COMPSCI 611",
      "title": "Advanced Algorithms",
      "instructor": "Hung Le",
      "Description": "Principles underlying the design and analysis of efficient algorithms. Topics to be covered include: divide-and-conquer algorithms, graph algorithms, matroids and greedy algorithms, randomized algorithms, NP-completeness, approximation algorithms, linear programming.",
      "Credits": 3
    },
    {
      "language": "not specified",
      "restrictions": "[]",
      "preqs": "[]",
      "cid": "COMPSCI 646",
      "title": "Information Retrieval",
      "instructor": "Hamed Zamani",
      "Description": "The course will cover basic and advanced techniques for text-based information systems. Topics covered include retrieval models, indexing and text representation, browsing and query reformulation, data-intensive computing approaches, evaluation, and issues surrounding implementation. The course will include a substantial project such as the implementation of major elements of search engines and applications",
      "Credits": 3
    },
    {
      "language": "Python",
      "restrictions": "[]",
      "preqs": "[]",
      "cid": "COMPSCI 653",
      "title": "Computer Networking",
      "instructor": "Arun Venkataramani",
      "Description": "The goals of this course are to teach advanced fundamental principles underlying computer network systems. The course will cover topics in the following categories: 1) routing and transport protocols, 2) resource management, 3) datacenter network design, 4) software defined networking 5) wireless networks, and 6) network security.",
      "Credits": 3
    },
    {
      "language": "Not specified",
      "restrictions": "[]",
      "preqs": "[]",
      "cid": "COMPSCI 660",
      "title": "Advanced Information Assurance",
      "instructor": "Amir Houmansadr",
      "Description": "This course provides an in-depth examination of the fundamental principles of information assurance. While the companion course for undergraduates is focused on practical issues, the syllabus of this course is influenced strictly by the latest research. We will cover a range of topics, including authentication, integrity, confidentiality of distributed systems, network security, malware, privacy, intrusion detection, intellectual property protection, and more",
      "Credits": 3
    },
    {
      "language": "Python, Solidity",
      "restrictions": "[]",
      "preqs": "[]",
      "cid": "COMPSCI 661",
      "title": "Secure Distributed Systems",
      "instructor": "Gregory Stone",
      "Description": "This is a class devoted to the study of securing distributed systems, with blockchain-based cryptocurrencies serving as our real platform of interest. We'll start with the fundamentals of Lamport's, Fischer's, and Douceur's results that fence-in all consensus system, and discuss Byzantine fault tolerance. We'll also look at the efficiency of the network architectures for peer-to-peer/distributed system communication and attacks on their security, such as denial of service attacks. And we'll review relevant applied cryptography such as elliptic curves. We ll discuss in detail the mechanisms of Bitcoin and Ethereum and we ll program distributed applications for Ethereum. Other topics include economics and finance. Assignments will include programming projects and reading research papers. The grade is also based on exams and participation in discussion. The course is based on a flipped classroom . Course was previously COMPSCI 690P",
      "Credits": 3
    },
    {
      "language": "MATLAB",
      "restrictions": "[]",
      "preqs": "[]",
      "cid": "COMPSCI 670",
      "title": "Computer Vision",
      "instructor": "Subhransu Maji",
      "Description": "This course will explore current techniques for the analysis of visual data (primarily color images). In the first part of the course we will examine the physics and geometry of image formation, including the design of cameras and the study of color sensing in the human eye. In each case we will look at the underlying mathematical models for these phenomena. In the second part of the course we will focus on algorithms to extract useful information from images. This includes detection of reliable interest points for applications such as image alignment, stereo and instance recognition; robust representations of images for recognition; and principles for grouping and segmentation. Time permitting we will look at some additional topics at the end of the course. Course assignments will highlight several computer vision tasks and methods. For each task you will construct a basic system, then improve it through a cycle of error analysis and model redesign. There will also be a final project, which will investigate a single topic or application in greater depth. This course assumes a good background in basic probability, linear algebra, and ability to program in MATLAB. Prior experience in signal/image processing is useful but not required.",
      "Credits": 3
    },
    {
      "language": "Java, C++ or Python",
      "restrictions": "[]",
      "preqs": "[]",
      "cid": "COMPSCI 677",
      "title": "Distributed and Operating Systems",
      "instructor": "Peter Klemperer",
      "Description": "This course provides an in-depth examination of the principles of distributed systems and advanced concepts in operating systems. Covered topics include client-server programming, distributed scheduling, virtualization, cloud computing, distributed storage, security in distributed systems, distributed middleware, ubiquitous computing, and applications such as the Internet of Things, Web and peer-to-peer systems. Prerequisites: Students should be able to easily program in a high-level language such as Java, C++ or Python, have had a course on data structures, be familiar with elements of computer architecture and have had previous exposure to the operating system concepts of processes, virtual memory, and scheduling. A previous course on uniprocessor operating systems (e.g., COMPSCI 377) will be helpful but not required",
      "Credits": 3
    },
    {
      "language": "C++ and/or Python",
      "restrictions": "[]",
      "preqs": "[]",
      "cid": "COMPSCI 687",
      "title": "Reinforcement Learning",
      "instructor": "Bruno Castro da Silva",
      "Description": "This course will provide an introduction to, and comprehensive overview of, reinforcement learning. Reinforcement learning algorithms repeatedly answer the question \"What should be done next?\", and they can learn via trial-and-error to answer these questions even when there is no supervisor telling the algorithm what the correct answer would have been. Applications of reinforcement learning span across medicine (How much insulin should be injected next? What drug should be given next?), marketing (What ad should be shown next?), robotics (How much power should be given to the motor?), game playing (What move should be made next?), environmental applications (Which countermeasure for an invasive species should be deployed next?), and dialogue systems (What type of sentence should be spoken next?), among many others. Broad topics covered in this course will include: Markov decision processes, reinforcement learning algorithms (model-based/model-free, batch/online, value function-based, actor-critics, policy gradient methods, etc.), and representations for reinforcement learning. Special topics may include ensuring the safety of reinforcement learning algorithms, hierarchical reinforcement learning, theoretical reinforcement learning, multi-agent reinforcement learning, and connections to animal learning. This course will emphasize hands-on experience, and assignments will require the implementation and application of many of the algorithms discussed in class. A background in machine learning (COMPSCI 589 or 689) and artificial intelligence (COMPSCI 683) is assumed. Assignments may require familiarity with C++ and/or Python",
      "Credits": 3
    },
    {
      "language": "Python",
      "restrictions": "[]",
      "preqs": "[]",
      "cid": "COMPSCI 689",
      "title": "Machine Learning",
      "instructor": "Benjamin Marlin",
      "Description": "Machine learning is the computational study of artificial systems that can adapt to novel situations, discover patterns from data, and improve performance with practice. This course will cover the popular frameworks for learning, including supervised learning, reinforcement learning, and unsupervised learning. The course will provide a state-of-the-art overview of the field, emphasizing the core statistical foundations. Detailed course topics: overview of different learning frameworks such as supervised learning, reinforcement learning, and unsupervised learning; mathematical foundations of statistical estimation; maximum likelihood and maximum a posteriori (MAP) estimation; missing data and expectation maximization (EM); graphical models including mixture models, hidden-Markov models; logistic regression and generalized linear models; maximum entropy and undirected graphical models; nonparametric models including nearest neighbor methods and kernel-based methods; dimensionality reduction methods (PCA and LDA); computational learning theory and VC-dimension; reinforcement learning; state-of-the-art applications including bioinformatics, information retrieval, robotics, sensor networks and vision.",
      "Credits": 3
    },
    {
      "language": "Not specified",
      "restrictions": "[]",
      "preqs": "[]",
      "cid": "COMPSCI 690C",
      "title": "Foundations of Applied Cryptography",
      "instructor": "Adam O'Neill",
      "Description": "This is a graduate-level introduction to cryptography, emphasizing formal definitions and proofs of security. Though the course is theoretical in nature, its viewpoint will be \"theory applied to practice.\" We will discuss cryptographic algorithms that are used in practice and how to reason about their security. More fundamentally, we will try to understand what security \"is\" in a rigorous way that allows us to follow sound cryptographic principles and uncover design weaknesses. Tentatively, we will cover: blockciphers, pseudorandom functions and permutations, symmetric encryption schemes and their security, hash functions, message authentication codes and their security, authenticated encryption schemes and protocols such as SSL/TLS, public-key encryption schemes and their security, digital signature schemes and their security, and public-key infrastructures.",
      "Credits": 3
    },
    {
      "language": "Not specified",
      "restrictions": "[]",
      "preqs": "[]",
      "cid": "COMPSCI 690F",
      "title": "Responsible Artificial Intelligence",
      "instructor": "Przemyslaw Adam Grabowicz",
      "Description": "The real-world deployment of machine learning models faces a series of lateral challenges affecting model trustworthiness, such as domain generalization, dataset shifts, causal validity, explainability, fairness, representativeness, and transparency. These challenges become increasingly important in techno-social systems affecting human high-stake decision making, which is often regulated by law. In this course, students will learn techniques for robust model evaluation, model selection, causal discovery, explainable and fair artificial intelligence, and interpretable models. In addition, students will reason about representativeness, transparency, and legal aspects of techno-social systems. The course will review both cutting-edge research and relevant portions of recent open-access textbooks. Coursework includes reading recent research papers, programming assignments, and a final group project. After completing the course, students should be able to develop, investigate, evaluate, and deploy artificial intelligence systems more responsibly",
      "Credits": 3
    },
    {
      "language": "Not specified",
      "restrictions": "[]",
      "preqs": "[]",
      "cid": "COMPSCI 690Q",
      "title": "Quantum Information Systems",
      "instructor": "Donald Towsley",
      "Description": "Fundamentals of quantum information systems, including quantum computation, quantum cryptography, and quantum information theory. Topics include: quantum circuit model, qubits, unitary operators, measurement, entanglement, quantum algorithms for factoring and search, quantum key distribution, error-correction and fault-tolerance, information capacity of quantum channels, complexity of quantum computation",
      "Credits": 3
    },
    {
      "language": "Not specified",
      "restrictions": "[]",
      "preqs": "[]",
      "cid": "COMPSCI 692K",
      "title": "Seminar - Algorithms with Predications",
      "instructor": "Mohammadhassan Hajiesmaili",
      "Description": "This seminar course will cover the recent topics in the emerging field of Algorithms with predictions, also known as learning-augmented algorithms, or algorithms with ML advice. This is an emerging topic at the intersection of theoretical computer science and machine learning. Generally speaking, a result in this area takes a problem with strong information-theoretic lower bounds (for instance on the competitive ratio), identifies a compact prediction that can be learned from real data, and gives a proof tying the performance of the algorithm to the quality of the underlying prediction. The field has blossomed with applications to a broad range of classic domains in theoretical computer science such as classical streaming algorithms, online scheduling, clustering, filtering data structures, and many others. The focus of this seminar, however, will be on online algorithms with predictions.",
      "Credits": "1 to 3"
    },
    {
      "language": "Not specified",
      "restrictions": "[]",
      "preqs": "[]",
      "cid": "COMPSCI 692V",
      "title": "Seminar - Making Sense of Visual Data",
      "instructor": "Kyle Cave, Ya Xiong",
      "Description": "In this course, we will focus on basic aspects of human perception and attention, and how they are relevant to areas of computer science, such as data visualization, human-computer interaction, and computer vision. We will also explore how applied research in these areas contributes to understanding the basic perceptual and cognitive mechanisms. Topics may include saliency models, memory, mental imagery, motion perception, eye-tracking, ensembling coding, and visual comparisons.",
      "Credits": 3
    },
    {
      "language": "Not specified",
      "restrictions": "[]",
      "preqs": "[]",
      "cid": "COMPSCI 698W",
      "title": "Practicum - CS Research Writing Practicum",
      "instructor": "Justin Obara",
      "Description": "This CS research writing class uses a workshop format to focus on structure and phrasing while engaging students in a process-based approach to writing. Instruction will emphasize genre and discourse analysis and engage students in activities to strengthen audience awareness. As such, students will analyze representative examples of computer science research writing for stylistic and argumentative conventions and then integrate the awareness of these conventions and moves into their own writing. Students will produce or substantially revise a complete piece of writing. 6 weeks.",
      "Credits": 1
    },
    {
      "language": "Not specified",
      "restrictions": "[]",
      "preqs": "[]",
      "cid": "COMPSCI 701",
      "title": "Advanced Topics in Computer Science",
      "instructor": "None",
      "Description": "Advanced Topics in Computer Science Master's Project: Advanced research project in Computer Science. The 3 credit option is for the second semester of a two semester sequence, 701Y followed by 701. The 6 credit option is for a project that will be begun and completed within the same semester",
      "Credits": 6
    },
    {
      "language": "Not specified",
      "restrictions": "[]",
      "preqs": "[]",
      "cid": "COMPSCI 701Y",
      "title": "Advanced Topics in Computer Science (1st Semester)",
      "instructor": "None",
      "Description": "Advanced Topics in Computer Science Master's Project: Advanced research project in Computer Science. Indicates the first semester of a two-semester sequence, 701Y (3 credits) followed by 701 (3 credits), with grade for both assigned at the end.",
      "Credits": 3
    },
    {
      "language": "Not specified",
      "restrictions": "[]",
      "preqs": "[]",
      "cid": "COMPSCI 879",
      "title": "Teaching Assistants as Tomorrow's Faculty",
      "instructor": "Neena Thota",
      "Description": "Teaching Assistants as Tomorrow's Faculty prepares Teaching Assistants (TAs) at the College of Information and Computer Sciences to fulfill their duties in an effective and pedagogically sound manner. The one credit (not repeatable) course is semester long and taken by all TAs prior to assuming assistantship.",
      "Credits": 2
    },
    {
      "language": "Not specified",
      "restrictions": "[]",
      "preqs": "[]",
      "cid": "COMPSCI 891M",
      "title": "Seminar - Theory of Computation",
      "instructor": "Cameron Musco",
      "Description": "The theory seminar is a weekly meeting in which topics of interest in the theory of computation - broadly construed - are presented. This is sometimes new research by visitors or local people. It is sometimes work in progress, and it is sometimes recent material of others that some of us present in order to learn and share. This is a one-credit seminar which may be taken repeatedly for credit up to six times",
      "Credits": 1
    },
    {
      "language": "Not specified",
      "restrictions": "[]",
      "preqs": "[[COMPSCI 311]]",
      "cid": "COMPSCI H311",
      "title": "Honors Colloquium for Introduction to Algorithms",
      "instructor": "Marius Minea",
      "Description": "The design and analysis of efficient algorithms for important computational problems. Emphasis on the relationships between algorithms and data structures and on measures of algorithmic efficiency. Advanced graph algorithms, dynamic programming applications, NP-completeness and space complexity, approximation and randomized algorithms. Experimental analysis of algorithms also emphasized. Use of computer required.",
      "Credits": 1
    },
    {
      "language": "Not specified",
      "restrictions": "[]",
      "preqs": "[]",
      "cid": "COMPSCI H377",
      "title": "Honors Colloquium for Operating Systems",
      "instructor": "Timothy Richards",
      "Description": "Students taking the honors section will be required to do additional readings and a semester-long project.",
      "Credits": 1
    },
    {
      "language": "Not specified",
      "restrictions": "[]",
      "preqs": "[[COMPSCI 589]]",
      "cid": "COMPSCI H589",
      "title": "Honors Colloquium for Machine Learning",
      "instructor": "Bruno Castro da Silva",
      "Description": "This colloquium will enrich the primary course by focusing on reading, presenting, and discussing foundational and recent research papers from the machine learning literature. Students will write weekly reading responses, and lead one to two group discussions over the course of the semester",
      "Credits": 1
    },
    {
      "language": "Not specified",
      "restrictions": "[]",
      "preqs": "[]",
      "cid": "INFO 101",
      "title": "Introduction to Informatics",
      "instructor": "Michelle Trim",
      "Description": "An introduction to the main concepts of Informatics. There are several 'Big Ideas' in computing, including but not limited to abstraction, data and information, algorithms, programming, the internet, and the global impacts of computing. This class provides an introduction to those ideas and considers some of the ways that those computing principles might be used to solve real world problems. Computer-based assignments are an integral part of this course but no programming knowledge or prior programming experience is expected or required. Not for CS majors",
      "Credits": 3
    },
    {
      "language": "Not specified",
      "restrictions": "[]",
      "preqs": "[[COMPSCI 240, COMPSCI 250], [COMPSCI 240, MATH 455]]",
      "cid": "INFO 150",
      "title": "A Mathematical Foundation for Informatics",
      "instructor": "Peter Haas",
      "Description": "Mathematical techniques useful in the study of computing and information processing. The mathematical method of definition and proof. Sets, functions, and relations. Combinatorics, probability and probabilistic reasoning. Graphs and trees as models of data and of computational processes. Not intended for Computer Science majors students interested in a majors-level treatment of this material should see COMPSCI 240 and 250 (or MATH 455)",
      "Credits": 3
    },
    {
      "language": "Not specified",
      "restrictions": "[]",
      "preqs": "[[MATH 101], [MATH 102], [MATH 104], [MATH 127], [MATH 128]]",
      "cid": "INFO 190S",
      "title": "Introduction to Programming",
      "instructor": "Simon Andrews, , Ghazaleh Parvini, Cole Reilly",
      "Description": "The world is rich in data and our ability to process, manipulate, analyze, and visualize that data is growing in power. This course discusses how to understand and solve real-world problems using modern programming techniques. Concepts and techniques covered include the representation of data, fundamentals of programming including data types, expressions, objects, methods, program design, program testing and debugging, state representation, accessing, processing, and manipulating data, generating visualizations of data, interpreting results, and introductory data analytics using data to make predictions that help solve important problems in the world around us. Use of a laptop computer is required. GenEd R2",
      "Credits": 4
    },
    {
      "language": "Python",
      "restrictions": "[]",
      "preqs": "[[INFO 190S]]",
      "cid": "INFO 190T",
      "title": "Introduction to Data Structures in Python",
      "instructor": "Jaime Davila",
      "Description": "This course introduces foundational abstract data types and algorithms. The main focus is on the use of data structures in designing and developing programs to solve problems in a variety of domains. Specific topics include lists, sets, dictionaries, graphs, stacks and queues, searching, and sorting. There will be weekly programming assignments, programming and written exercises in discussion sections, regular quizzes, and a cumulative final exam. Use of a personal laptop in class is required.",
      "Credits": 4
    },
    {
      "language": "Not specified",
      "restrictions": "[]",
      "preqs": "[[COMPSCI 453]]",
      "cid": "INFO 203",
      "title": "A Networked World",
      "instructor": "Mohammadhassan Hajiesmaili",
      "Description": "The course will cover the technical foundations of today s communication networks, particularly the Internet. It will also address key social, policy, economic and legal aspects of these networks, their use (and abuse), and their regulation. This course covers computer science topics, but all material will be presented in a way that is accessible to an educated audience with or without a strong technical background. Not intended for Computer Science majors students interested in a majors-level treatment of this material should see COMPSCI 453",
      "Credits": 3
    }
  ]
}